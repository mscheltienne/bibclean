
@article{gramfort_mne_2014,
	title = {{MNE} software for processing {MEG} and {EEG} data},
	volume = {86},
	issn = {10538119},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S1053811913010501},
	doi = {10.1016/j.neuroimage.2013.10.027},
	abstract = {Magnetoencephalography and electroencephalography (M/EEG) measure the weak electromagnetic signals originating from neural currents in the brain. Using these signals to characterize and locate brain activity is a challenging task, as evidenced by several decades of methodological contributions. MNE, whose name stems from its capability to compute cortically-constrained minimum-norm current estimates from M/EEG data, is a software package that provides comprehensive analysis tools and workﬂows including preprocessing, source estimation, time–frequency analysis, statistical analysis, and several methods to estimate functional connectivity between distributed brain regions. The present paper gives detailed information about the MNE package and describes typical use cases while also warning about potential caveats in analysis. The MNE package is a collaborative effort of multiple institutes striving to implement and share best methods and to facilitate distribution of analysis pipelines to advance reproducibility of research. Full documentation is available at http://martinos.org/mne.},
	language = {en},
	urldate = {2021-09-23},
	journal = {NeuroImage},
	author = {Gramfort, Alexandre and Luessi, Martin and Larson, Eric and Engemann, Denis A. and Strohmeier, Daniel and Brodbeck, Christian and Parkkonen, Lauri and Hämäläinen, Matti S.},
	month = feb,
	year = {2014},
	pages = {446--460},
	file = {Gramfort et al. - 2014 - MNE software for processing MEG and EEG data.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\F9XHY6RI\\Gramfort et al. - 2014 - MNE software for processing MEG and EEG data.pdf:application/pdf},
}

@article{virtanen_scipy_2020,
	title = {{SciPy} 1.0: fundamental algorithms for scientific computing in {Python}},
	volume = {17},
	issn = {1548-7091, 1548-7105},
	shorttitle = {{SciPy} 1.0},
	url = {http://www.nature.com/articles/s41592-019-0686-2},
	doi = {10.1038/s41592-019-0686-2},
	abstract = {Abstract
            SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
	language = {en},
	number = {3},
	urldate = {2022-10-12},
	journal = {Nature Methods},
	author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and van der Walt, Stéfan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C J and Polat, İlhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Antônio H. and Pedregosa, Fabian and van Mulbregt, Paul and {SciPy 1.0 Contributors} and Vijaykumar, Aditya and Bardelli, Alessandro Pietro and Rothberg, Alex and Hilboll, Andreas and Kloeckner, Andreas and Scopatz, Anthony and Lee, Antony and Rokem, Ariel and Woods, C. Nathan and Fulton, Chad and Masson, Charles and Häggström, Christian and Fitzgerald, Clark and Nicholson, David A. and Hagen, David R. and Pasechnik, Dmitrii V. and Olivetti, Emanuele and Martin, Eric and Wieser, Eric and Silva, Fabrice and Lenders, Felix and Wilhelm, Florian and Young, G. and Price, Gavin A. and Ingold, Gert-Ludwig and Allen, Gregory E. and Lee, Gregory R. and Audren, Hervé and Probst, Irvin and Dietrich, Jörg P. and Silterra, Jacob and Webber, James T and Slavič, Janko and Nothman, Joel and Buchner, Johannes and Kulick, Johannes and Schönberger, Johannes L. and de Miranda Cardoso, José Vinícius and Reimer, Joscha and Harrington, Joseph and Rodríguez, Juan Luis Cano and Nunez-Iglesias, Juan and Kuczynski, Justin and Tritz, Kevin and Thoma, Martin and Newville, Matthew and Kümmerer, Matthias and Bolingbroke, Maximilian and Tartre, Michael and Pak, Mikhail and Smith, Nathaniel J. and Nowaczyk, Nikolai and Shebanov, Nikolay and Pavlyk, Oleksandr and Brodtkorb, Per A. and Lee, Perry and McGibbon, Robert T. and Feldbauer, Roman and Lewis, Sam and Tygier, Sam and Sievert, Scott and Vigna, Sebastiano and Peterson, Stefan and More, Surhud and Pudlik, Tadeusz and Oshima, Takuya and Pingel, Thomas J. and Robitaille, Thomas P. and Spura, Thomas and Jones, Thouis R. and Cera, Tim and Leslie, Tim and Zito, Tiziano and Krauss, Tom and Upadhyay, Utkarsh and Halchenko, Yaroslav O. and Vázquez-Baeza, Yoshiki},
	month = mar,
	year = {2020},
	pages = {261--272},
	file = {Virtanen et al. - 2020 - SciPy 1.0 fundamental algorithms for scientific c.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\5ST4PLCB\\Virtanen et al. - 2020 - SciPy 1.0 fundamental algorithms for scientific c.pdf:application/pdf},
}

@article{harris_array_2020,
	title = {Array programming with {NumPy}},
	volume = {585},
	issn = {0028-0836, 1476-4687},
	url = {https://www.nature.com/articles/s41586-020-2649-2},
	doi = {10.1038/s41586-020-2649-2},
	abstract = {Abstract

              Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves
              1
              and in the first imaging of a black hole
              2
              . Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
	language = {en},
	number = {7825},
	urldate = {2022-10-12},
	journal = {Nature},
	author = {Harris, Charles R. and Millman, K. Jarrod and van der Walt, Stéfan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and van Kerkwijk, Marten H. and Brett, Matthew and Haldane, Allan and del Río, Jaime Fernández and Wiebe, Mark and Peterson, Pearu and Gérard-Marchant, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
	month = sep,
	year = {2020},
	pages = {357--362},
	file = {Harris et al. - 2020 - Array programming with NumPy.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\5H7ZM23G\\Harris et al. - 2020 - Array programming with NumPy.pdf:application/pdf},
}

@article{peirce_psychopy2_2019,
	title = {{PsychoPy2}: {Experiments} in behavior made easy},
	volume = {51},
	issn = {1554-3528},
	shorttitle = {{PsychoPy2}},
	url = {http://link.springer.com/10.3758/s13428-018-01193-y},
	doi = {10.3758/s13428-018-01193-y},
	abstract = {PsychoPy is an application for the creation of experiments in behavioral science (psychology, neuroscience, linguistics, etc.) with precise spatial control and timing of stimuli. It now provides a choice of interface; users can write scripts in Python if they choose, while those who prefer to construct experiments graphically can use the new Builder interface. Here we describe the features that have been added over the last 10 years of its development. The most notable addition has been that Builder interface, allowing users to create studies with minimal or no programming, while also allowing the insertion of Python code for maximal flexibility. We also present some of the other new features, including further stimulus options, asynchronous time-stamped hardware polling, and better support for open science and reproducibility. Tens of thousands of users now launch PsychoPy every month, and more than 90 people have contributed to the code. We discuss the current state of the project, as well as plans for the future.},
	language = {en},
	number = {1},
	urldate = {2022-10-12},
	journal = {Behavior Research Methods},
	author = {Peirce, Jonathan and Gray, Jeremy R. and Simpson, Sol and MacAskill, Michael and Höchenberger, Richard and Sogo, Hiroyuki and Kastman, Erik and Lindeløv, Jonas Kristoffer},
	month = feb,
	year = {2019},
	pages = {195--203},
	file = {Peirce et al. - 2019 - PsychoPy2 Experiments in behavior made easy.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\LPQRJJIB\\Peirce et al. - 2019 - PsychoPy2 Experiments in behavior made easy.pdf:application/pdf},
}

@article{gramfort_meg_2013,
	title = {{MEG} and {EEG} data analysis with {MNE}-{Python}},
	volume = {7},
	issn = {1662453X},
	url = {http://journal.frontiersin.org/article/10.3389/fnins.2013.00267/abstract},
	doi = {10.3389/fnins.2013.00267},
	language = {en},
	urldate = {2022-10-12},
	journal = {Frontiers in Neuroscience},
	author = {Gramfort, Alexandre},
	year = {2013},
	file = {Gramfort - 2013 - MEG and EEG data analysis with MNE-Python.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\JIUP9F7S\\Gramfort - 2013 - MEG and EEG data analysis with MNE-Python.pdf:application/pdf},
}

@article{appelhoff_mne-bids_2019,
	title = {{MNE}-{BIDS}: {Organizing} electrophysiological data into the {BIDS} format and facilitating their analysis},
	volume = {4},
	issn = {2475-9066},
	shorttitle = {{MNE}-{BIDS}},
	url = {https://joss.theoj.org/papers/10.21105/joss.01896},
	doi = {10.21105/joss.01896},
	abstract = {The development of the Brain Imaging Data Structure (BIDS; Gorgolewski et al., 2016) gave the neuroscientific community a standard to organize and share data. BIDS prescribes file naming conventions and a folder structure to store data in a set of already existing file formats. Next to rules about organization of the data itself, BIDS provides standardized templates to store associated metadata in the form of Javascript Object Notation (JSON) and tab separated value (TSV) files. It thus facilitates data sharing, eases metadata querying, and enables automatic data analysis pipelines. BIDS is a rich system to curate, aggregate, and annotate neuroimaging databases.},
	language = {en},
	number = {44},
	urldate = {2022-10-12},
	journal = {Journal of Open Source Software},
	author = {Appelhoff, Stefan and Sanderson, Matthew and Brooks, Teon and van Vliet, Marijn and Quentin, Romain and Holdgraf, Chris and Chaumon, Maximilien and Mikulan, Ezequiel and Tavabi, Kambiz and Höchenberger, Richard and Welke, Dominik and Brunner, Clemens and Rockhill, Alexander and Larson, Eric and Gramfort, Alexandre and Jas, Mainak},
	month = dec,
	year = {2019},
	pages = {1896},
	file = {Appelhoff et al. - 2019 - MNE-BIDS Organizing electrophysiological data int.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\4FSSJWD2\\Appelhoff et al. - 2019 - MNE-BIDS Organizing electrophysiological data int.pdf:application/pdf},
}

@article{niso_meg-bids_2018,
	title = {{MEG}-{BIDS}, the brain imaging data structure extended to magnetoencephalography},
	volume = {5},
	issn = {2052-4463},
	url = {http://www.nature.com/articles/sdata2018110},
	doi = {10.1038/sdata.2018.110},
	language = {en},
	number = {1},
	urldate = {2022-10-12},
	journal = {Scientific Data},
	author = {Niso, Guiomar and Gorgolewski, Krzysztof J. and Bock, Elizabeth and Brooks, Teon L. and Flandin, Guillaume and Gramfort, Alexandre and Henson, Richard N. and Jas, Mainak and Litvak, Vladimir and T. Moreau, Jeremy and Oostenveld, Robert and Schoffelen, Jan-Mathijs and Tadel, Francois and Wexler, Joseph and Baillet, Sylvain},
	month = dec,
	year = {2018},
	pages = {180110},
	file = {Niso et al. - 2018 - MEG-BIDS, the brain imaging data structure extende.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\6SD4PVMT\\Niso et al. - 2018 - MEG-BIDS, the brain imaging data structure extende.pdf:application/pdf},
}

@article{pernet_eeg-bids_2019,
	title = {{EEG}-{BIDS}, an extension to the brain imaging data structure for electroencephalography},
	volume = {6},
	issn = {2052-4463},
	url = {http://www.nature.com/articles/s41597-019-0104-8},
	doi = {10.1038/s41597-019-0104-8},
	language = {en},
	number = {1},
	urldate = {2022-10-12},
	journal = {Scientific Data},
	author = {Pernet, Cyril R. and Appelhoff, Stefan and Gorgolewski, Krzysztof J. and Flandin, Guillaume and Phillips, Christophe and Delorme, Arnaud and Oostenveld, Robert},
	month = dec,
	year = {2019},
	pages = {103},
	file = {Pernet et al. - 2019 - EEG-BIDS, an extension to the brain imaging data s.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\JFMWP3G5\\Pernet et al. - 2019 - EEG-BIDS, an extension to the brain imaging data s.pdf:application/pdf},
}

@article{holdgraf_ieeg-bids_2019,
	title = {{iEEG}-{BIDS}, extending the {Brain} {Imaging} {Data} {Structure} specification to human intracranial electrophysiology},
	volume = {6},
	issn = {2052-4463},
	url = {http://www.nature.com/articles/s41597-019-0105-7},
	doi = {10.1038/s41597-019-0105-7},
	language = {en},
	number = {1},
	urldate = {2022-10-12},
	journal = {Scientific Data},
	author = {Holdgraf, Christopher and Appelhoff, Stefan and Bickel, Stephan and Bouchard, Kristofer and D’Ambrosio, Sasha and David, Olivier and Devinsky, Orrin and Dichter, Benjamin and Flinker, Adeen and Foster, Brett L. and Gorgolewski, Krzysztof J. and Groen, Iris and Groppe, David and Gunduz, Aysegul and Hamilton, Liberty and Honey, Christopher J. and Jas, Mainak and Knight, Robert and Lachaux, Jean-Philippe and Lau, Jonathan C. and Lee-Messer, Christopher and Lundstrom, Brian N. and Miller, Kai J. and Ojemann, Jeffrey G. and Oostenveld, Robert and Petridou, Natalia and Piantoni, Gio and Pigorini, Andrea and Pouratian, Nader and Ramsey, Nick F. and Stolk, Arjen and Swann, Nicole C. and Tadel, François and Voytek, Bradley and Wandell, Brian A. and Winawer, Jonathan and Whitaker, Kirstie and Zehl, Lyuba and Hermes, Dora},
	month = dec,
	year = {2019},
	pages = {102},
	file = {Holdgraf et al. - 2019 - iEEG-BIDS, extending the Brain Imaging Data Struct.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\X3AC2E83\\Holdgraf et al. - 2019 - iEEG-BIDS, extending the Brain Imaging Data Struct.pdf:application/pdf},
}

@article{li_mne-icalabel_2022,
	title = {{MNE}-{ICALabel}: {Automatically} annotating {ICA} componentswith {ICLabel} in {Python}},
	volume = {7},
	issn = {2475-9066},
	shorttitle = {{MNE}-{ICALabel}},
	url = {https://joss.theoj.org/papers/10.21105/joss.04484},
	doi = {10.21105/joss.04484},
	abstract = {Scalp electroencephalography (EEG) and magnetoencephalography (MEG) analysis is typically very noisy and contains various non-neural signals, such as heartbeat artifacts. Independent component analysis (ICA) is a common procedure to remove these artifacts (Bell \& Sejnowski, 1995). However, removing artifacts requires manual annotation of ICA components, which is subject to human error and very laborious when operating on large datasets. This work makes the popular ICLabel model (Pion-Tonachini et al., 2019) available in Python by creating a software package compatible with the MNE-Python [from v1.1; Gramfort et al. (2013)] software toolkit in a modern PyTorch format (Paszke et al., 2019). The ICLabel model was previously only available in an outdated version of TensorFlow that was no longer supported, and migrating the model now to an updated PyTorch version will ensure the model will not break due to unmaintained versions of software. This enables the automatic labeling of ICA components, improving the preprocessing and analysis pipeline of electrophysiological data.},
	language = {en},
	number = {76},
	urldate = {2022-10-12},
	journal = {Journal of Open Source Software},
	author = {Li, Adam and Feitelberg, Jacob and Saini, Anand Prakash and Höchenberger, Richard and Scheltienne, Mathieu},
	month = aug,
	year = {2022},
	pages = {4484},
	file = {Li et al. - 2022 - MNE-ICALabel Automatically annotating ICA compone.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\4KC7AVDM\\Li et al. - 2022 - MNE-ICALabel Automatically annotating ICA compone.pdf:application/pdf},
}

@article{ablin_faster_2018,
	title = {Faster independent component analysis by preconditioning with {Hessian} approximations},
	volume = {66},
	issn = {1053-587X, 1941-0476},
	url = {http://arxiv.org/abs/1706.08171},
	doi = {10.1109/TSP.2018.2844203},
	abstract = {Independent Component Analysis (ICA) is a technique for unsupervised exploration of multi-channel data that is widely used in observational sciences. In its classic form, ICA relies on modeling the data as linear mixtures of non-Gaussian independent sources. The maximization of the corresponding likelihood is a challenging problem if it has to be completed quickly and accurately on large sets of real data. We introduce the Preconditioned ICA for Real Data (Picard) algorithm, which is a relative L-BFGS algorithm preconditioned with sparse Hessian approximations. Extensive numerical comparisons to several algorithms of the same class demonstrate the superior performance of the proposed technique, especially on real data, for which the ICA model does not necessarily hold.},
	language = {en},
	number = {15},
	urldate = {2022-10-12},
	journal = {IEEE Transactions on Signal Processing},
	author = {Ablin, Pierre and Cardoso, Jean-François and Gramfort, Alexandre},
	month = aug,
	year = {2018},
	note = {arXiv:1706.08171 [stat]},
	keywords = {Statistics - Applications, Statistics - Machine Learning},
	pages = {4040--4049},
	file = {Ablin et al. - 2018 - Faster independent component analysis by precondit.pdf:C\:\\Users\\Mathieu\\Zotero\\storage\\7FQYQUIS\\Ablin et al. - 2018 - Faster independent component analysis by precondit.pdf:application/pdf},
}
